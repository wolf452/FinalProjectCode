pipeline {
    agent any

    environment {
        TERRAFORM_DIR = 'terraform'
        BACKEND_DIR = 'terraform'
        ANSIBLE_DIR = 'ansible'
        INVENTORY_FILE = 'inventory'
        AWS_ACCESS_KEY_ID = credentials('aws-access-key')  
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-key')  
        AWS_REGION = 'us-east-1'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/wolf452/FinalProjectCode.git'
            }
        }

        stage('Terraform Init') {
            steps {
                dir("${TERRAFORM_DIR}") {
                    withCredentials([aws(credentialsId: 'aws-cred')]) {
                        script {
                            env.TF_VAR_AWS_ACCESS_KEY = env.AWS_ACCESS_KEY_ID
                            env.TF_VAR_AWS_SECRET_KEY = env.AWS_SECRET_ACCESS_KEY
                        }
                        sh 'terraform init -reconfigure'
                    }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir("${TERRAFORM_DIR}") {
                    sh 'terraform plan'
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                dir("${TERRAFORM_DIR}") {
                    sh 'terraform apply -auto-approve'
                }
            }
        }

        
     
        stage('Delay Before Ansible Playbook') {
            steps {
                script {
                    echo "Waiting for 1 minute before proceeding..."
                    sleep time: 1, unit: 'MINUTES'
                    echo "Proceeding to run Ansible playbook..."
                }
            }
        }

        stage('Run Ansible') {
            steps {
                dir("${ANSIBLE_DIR}") {
                    ansiblePlaybook(
                        credentialsId: 'ansible-ssh',
                        inventory: "${INVENTORY_FILE}",
                        playbook: 'playbook.yml',
                        extras: '-e "ansible_ssh_extra_args=\'-o StrictHostKeyChecking=no\'"'
                    )
                }
            }
        }
    }
}
